(function() {var implementors = {};
implementors["rmp_serde"] = [{"text":"impl&lt;'a, W&gt; <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a> for &amp;'a mut <a class=\"struct\" href=\"rmp_serde/encode/struct.Serializer.html\" title=\"struct rmp_serde::encode::Serializer\">Serializer</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,&nbsp;</span>","synthetic":false,"types":["rmp_serde::encode::Serializer"]},{"text":"impl&lt;'a, S&gt; <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a> for &amp;'a mut <a class=\"struct\" href=\"rmp_serde/ext/struct.StructMapSerializer.html\" title=\"struct rmp_serde::ext::StructMapSerializer\">StructMapSerializer</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"rmp_serde/encode/trait.UnderlyingWrite.html\" title=\"trait rmp_serde::encode::UnderlyingWrite\">UnderlyingWrite</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'b mut </a>S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&lt;Ok = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error = <a class=\"enum\" href=\"rmp_serde/encode/enum.Error.html\" title=\"enum rmp_serde::encode::Error\">Error</a>&gt;,&nbsp;</span>","synthetic":false,"types":["rmp_serde::ext::StructMapSerializer"]},{"text":"impl&lt;'a, S&gt; <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a> for &amp;'a mut <a class=\"struct\" href=\"rmp_serde/ext/struct.StructTupleSerializer.html\" title=\"struct rmp_serde::ext::StructTupleSerializer\">StructTupleSerializer</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"rmp_serde/encode/trait.UnderlyingWrite.html\" title=\"trait rmp_serde::encode::UnderlyingWrite\">UnderlyingWrite</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'b mut </a>S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&lt;Ok = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error = <a class=\"enum\" href=\"rmp_serde/encode/enum.Error.html\" title=\"enum rmp_serde::encode::Error\">Error</a>&gt;,&nbsp;</span>","synthetic":false,"types":["rmp_serde::ext::StructTupleSerializer"]}];
implementors["serde_json"] = [{"text":"impl&lt;'a, W, F&gt; <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a> for &amp;'a mut <a class=\"struct\" href=\"serde_json/ser/struct.Serializer.html\" title=\"struct serde_json::ser::Serializer\">Serializer</a>&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"serde_json/ser/trait.Formatter.html\" title=\"trait serde_json::ser::Formatter\">Formatter</a>,&nbsp;</span>","synthetic":false,"types":["serde_json::ser::Serializer"]}];
implementors["serde_urlencoded"] = [{"text":"impl&lt;'input, 'output, Target&gt; <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a> for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.Serializer.html\" title=\"struct serde_urlencoded::ser::Serializer\">Serializer</a>&lt;'input, 'output, Target&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Target: 'output + <a class=\"trait\" href=\"url/form_urlencoded/trait.Target.html\" title=\"trait url::form_urlencoded::Target\">UrlEncodedTarget</a>,&nbsp;</span>","synthetic":false,"types":["serde_urlencoded::ser::Serializer"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()