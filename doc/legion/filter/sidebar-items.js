initSidebarItems({"mod":[["filter_fns",""]],"struct":[["And","A filter which requires all filters within `T` match."],["ArchetypeFilterData","Input data for archetype filters."],["ChunkFilterData","Input data for chunk filters."],["ChunksetFilterData","Input data for chunkset filters."],["ComponentChangedFilter","A filter which requires that entity data of type `T` has changed within the chunk since the last time the filter was executed."],["ComponentFilter","A filter qhich requires that all chunks contain entity data components of type `T`."],["EntityFilterTuple","An EntityFilter which combined both an archetype filter and a chunk filter."],["FilterArchIter","An iterator which yields the indexes of archetypes that match a filter."],["FilterChunkIter","An iterator which yields the index of chuinks that match a filter."],["FilterEntityIter","An iterator which yields the IDs of chunks that match an entity filter."],["FilterIter","An iterator over the elements matching a filter."],["Not","A filter which negates `F`."],["Or","A filter which requires that any filter within `T` match."],["Passthrough","A passthrough filter which allows through all elements."],["TagFilter","A filter which requires that all chunks contain shared tag data of type `T`."],["TagValueFilter","A filter which requires that all chunks contain a specific tag value."]],"trait":[["ActiveFilter","A marker trait for filters that are not no-ops."],["EntityFilter","A type which combines both an archetype and a chunk filter."],["Filter","A streaming iterator of bools."]]});